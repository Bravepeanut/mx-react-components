const React = require('react');

const { Icon } = require('mx-react-components');

const Home = React.createClass({
  render () {
    return (
      <div>
        <div className='hero'>
          <h1>MX Component Library</h1>
          <p>A lightweight, ReactJS based ui kit for developing web-based applications.</p>
          <code>npm install mx-react-components</code>
        </div>
        <div className='features'>
          <div className='container'>
            <h1>Features</h1>
            <div className='flex'>
              <div className='feature'>
                <img src='/mx-react-components/images/react-logo.png' />
                <h2>ReactJS</h2>
                <p>
                  We are huge advocates of ReactJS at MX. Our ui kit is built using React and is intended to be used in React based web projects.
                </p>
              </div>
              <div className='feature'>
                <Icon size={60} type='gear' />
                <h2>Customizable</h2>
                <p>
                  The ui kit comes pre-designed to match the MX product style, but each component can be customized to fit your needs.
                </p>
              </div>
              <div className='feature'>
                <Icon size={60} type='mobile-phone' />
                <h2>Responsive</h2>
                <p>
                  All of our components have been designed and built to provide a consistent experience across mobile, tablet, and desktop devices.
                </p>
              </div>
              <div className='feature'>
                <img src='/mx-react-components/images/radium-logo.png' />
                <h2>Radium</h2>
                <p>
                  We use Radium for inline css styles that are scoped to each component and prevent conflicts with other component or global styles.
                </p>
              </div>
            </div>
          </div>
        </div>
        <div className='contribute'>
          <div className='container'>
            <h1>Contribute</h1>

            <h3>Fork the repo</h3>
            <p>The repo can be found at https://github.com/mxenabled/mx-react-components</p>

            <h3>Install the node modules</h3>
            <p>You may need to install some modules like babel and esw globally so you have access to their cli's.</p>
            <p><code>npm install</code></p>

            <h3>Run Babel</h3>
            <p>Babel allows us to use ES6 and JSX when writing the components. It will compile all of the files located in the "src" directory in the "dist" directory.</p>
            <p><code>babel src --out-dir dist</code></p>

            <h3>Run ESLint</h3>
            <p>ESLint is used to check the code syntax and style. Your PR must pass ESLint before it can be merged.</p>
            <p><code>esw src -w</code></p>

            <h3>Run the demo</h3>
            <p>The demo is a quick and easy way to preview your changes. You can also npm linking to use your modified module in any project. Make sure you are in the "demo" directory and run:</p>
            <p><code>webpack -w</code></p>

            <h3>Make changes</h3>
            <p>Be sure to only edit the files in the "src" directory. The files in the "dist" directory will be automatically generated by Babel.</p>

            <h3>Commit changes and create PR</h3>
            <p>After you submit a PR against the main repo, someone from our team will review the changes and either request edits or merge it in.</p>
          </div>
        </div>
      </div>
    );
  }
});

module.exports = Home;